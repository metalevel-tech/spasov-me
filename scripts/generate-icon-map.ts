// pnpm exec ts-node --skip-project scripts/generate-icon-map.ts
// https://stackoverflow.com/questions/11233498/json-stringify-without-quotes-on-properties

import { IconMap } from "../interfaces/IconMap";

import fs from "fs";
import path from "path";

const iconsDir = "./public/assets/icons";

const generateIconsMap = (dir: string): IconMap => {
	const directoryPath = path.join(process.cwd(), dir);
	const svgFiles = fs.readdirSync(directoryPath).filter((file) => file.endsWith(".svg"));

	const icons = svgFiles.reduce((acc: IconMap, fileName): IconMap => {
		const baseName = path
			.parse(fileName)
			.name.toLocaleLowerCase()
			.replace(/-light|-dark$/, "")
			.replace(/(\s*|_|-)/, "");
		const filePath = path.join(dir, fileName).replace(/^public/, "");

		if (!acc[baseName]) {
			acc[baseName] = { name: baseName, light: null, dark: null } as unknown as IconMap[string];
		}

		if (fileName.includes("-light")) {
			acc[baseName].light = filePath;
		} else {
			acc[baseName].dark = filePath;
		}

		if (!acc[baseName].light) {
			acc[baseName].light = filePath;
		}

		if (!acc[baseName].dark) {
			acc[baseName].dark = filePath;
		}

		return acc;
	}, {});

	return icons;
};

const iconMap = generateIconsMap(iconsDir);

fs.writeFileSync(
	`${iconsDir}/index.ts`,
	"// This file is generated by scripts/generate-icon-map.ts\n\n" +
		`const iconsMap = ${JSON.stringify(iconMap, null, "\t")
			.replace(/"([^"]+)":/g, "$1:")
			.replace(/("|}|])(?:\n)/g, "$1,\n")};` +
		"\n\nexport default iconsMap;\n"
);
